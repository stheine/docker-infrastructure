version: "3.2"

volumes:
  # Forcing the qnap/192.168.6.7 mounts to nfsvers=3, as nfs4 causes i/o errors
  # while [ true ]; do echo `date` > dieZeit; cat dieZeit; sleep 1; done

  jalousie:
    driver: local
    driver_opts:
      type: none
      device: /mnt/qnap_linux/data/jalousie
      o: bind

  portainer:
    driver: local
    driver_opts:
      type: none
      device: /docker-data/portainer
      o: bind

  pihole_etc_dnsmasq_d:
    driver: local
    driver_opts:
      type: none
      device: /docker-data/pihole/etc_dnsmasq.d
      o: bind

  pihole_etc_pihole:
    driver: local
    driver_opts:
      type: none
      device: /docker-data/pihole/etc_pihole
      o: bind

  postfix_creds:
    driver: local
    driver_opts:
      type: none
      device: /mnt/qnap_linux/data/postfix_creds
      o: bind

  strom:
    driver: local
    driver_opts:
      type: none
      device: /mnt/qnap_linux/data/strom
      o: bind

  zigbee2mqtt:
    driver: local
    driver_opts:
      type: none
      device: /mnt/qnap_linux/data/zigbee2mqtt
      o: bind

networks:
  backend:
    driver: bridge

services:
  portainer:
    restart: always
    image: portainer/portainer-ce
    ports:
      - 8008:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data:nocopy

  jalousie-backend:
    restart: always
    build: jalousie-backend
    hostname: pi-jalousie-backend
    networks:
      - backend
    volumes:
      - jalousie:/var/jalousie:nocopy
      - ./jalousie-backend/app:/app

  jalousie-io:
    restart: always
    build: jalousie-io
    hostname: pi-jalousie-io
    networks:
      - backend
    cap_add:
      - SYS_RAWIO
    privileged: true
    devices:
      - /dev/mem:/dev/mem
    volumes:
      - jalousie:/var/jalousie:nocopy
      - ./jalousie-io/app:/app

  pihole:
    restart: always
    image: pihole/pihole:v5.7
    hostname: pi-pihole
    dns:
      - 192.168.6.1
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    environment:
      TZ: 'Europe/Berlin'
    volumes:
      - pihole_etc_dnsmasq_d:/etc/dnsmasq.d
      - pihole_etc_pihole:/etc/pihole

  postfix:
    restart: always
    build: postfix
    hostname: pi-postfix
    ports:
      - "25:25"
    networks:
      - backend
    volumes:
      - postfix_creds:/postfix_creds:nocopy

  watchdog:
    restart: always
    build: watchdog
    hostname: pi-jalousie-watchdog
    volumes:
      - ./watchdog/app:/app
    networks:
      - backend
    ports:
      - 31038:31038
    links:
      - postfix

  zigbee2mqtt:
    restart: always
    build: zigbee2mqtt
    ports:
      - 1881:1881
    networks:
      - backend
    volumes:
      - zigbee2mqtt:/app/data
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    environment:
      - TZ=Europe/Amsterdam
